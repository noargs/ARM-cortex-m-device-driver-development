#ifndef INC_STM32F407XX_H_
#define INC_STM32F407XX_H_


/*
 * Base addresses of Flash and SRAM memories
 */
#define FLASH_BASEADDR                             0x08000000U
#define SRAM1_BASEADDR                             0x20000000U         // first 112KB
#define SRAM2_BASEADDR                             0x20001C00U         // 112 * 1024  = 114688 to Hex 1C00, 0x2000000 + 1C00 = 0x20001C00
#define ROM_BASEADDR                               0x1FFF0000U
#define SRAM                                       SRAM1_BASEADDR


/*
 * AHBx and APBx Bus Peripheral base addresses
 */
#define PERIPH_BASEADDR                            0x40000000U
#define APB1PERIPH_BASEADDR                        PERIPH_BASEADDR
#define APB2PERIPH_BASEADDR                        0x40010000U
#define AHB1PERIPH_BASEADDR                        0x40020000U
#define AHB2PERIPH_BASEADDR                        0x50000000U


/*
 * Base addresses of peripherals, hanging on AHB1 bus
 */
#define GPIOA_BASEADDR                             (AHB1PERIPH_BASEADDR + 0x0000)
#define GPIOB_BASEADDR                             (AHB1PERIPH_BASEADDR + 0x0400)
#define GPIOC_BASEADDR                             (AHB1PERIPH_BASEADDR + 0x0800)
#define GPIOD_BASEADDR                             (AHB1PERIPH_BASEADDR + 0x0C00)
#define GPIOE_BASEADDR                             (AHB1PERIPH_BASEADDR + 0x1000)
#define GPIOF_BASEADDR                             (AHB1PERIPH_BASEADDR + 0x1400)
#define GPIOG_BASEADDR                             (AHB1PERIPH_BASEADDR + 0x1800)
#define GPIOH_BASEADDR                             (AHB1PERIPH_BASEADDR + 0x1C00)
#define GPIOI_BASEADDR                             (AHB1PERIPH_BASEADDR + 0x2000)


/*
 * Base addresses of peripherals, hanging on APB1 bus
 */
#define I2C1_BASEADDR                               (APB1PERIPH_BASEADDR + 0x5400)
#define I2C2_BASEADDR                               (APB1PERIPH_BASEADDR + 0x5800)
#define I2C3_BASEADDR                               (APB1PERIPH_BASEADDR + 0x5C00)

#define SPI2_BASEADDR                               (APB1PERIPH_BASEADDR + 0x3800)
#define SPI3_BASEADDR                               (APB1PERIPH_BASEADDR + 0x3C00)

#define UART4_BASEADDR                              (APB1PERIPH_BASEADDR + 0x4C00)
#define UART5_BASEADDR                              (APB1PERIPH_BASEADDR + 0x5000)
#define USART2_BASEADDR                             (APB1PERIPH_BASEADDR + 0x4400)
#define USART3_BASEADDR                             (APB1PERIPH_BASEADDR + 0x4800)

/*
 * Base addresses of peripherals, hanging on APB2 bus
 */
#define EXT1_BASEADDR                               (APB2PERIPH_BASEADDR + 0x3C00)
#define SPI1_BASEADDR                               (APB2PERIPH_BASEADDR + 0x3000)
#define SYSCFG_BASEADDR                             (APB2PERIPH_BASEADDR + 0x3800)
#define USART1_BASEADDR                             (APB2PERIPH_BASEADDR + 0x1000)
#define USART6_BASEADDR                             (APB2PERIPH_BASEADDR + 0x1400)


/*
 *                              Peripheral register definition structures
 *                                     STM32F4x family of MCUs
 */
typedef struct {
	uint32_t MODER;       // GPIO port mode register                 Address offset 0x00
	uint32_t OTYPER;      // GPIO port output type register          Address offset 0x04
	uint32_t OSPEEDR;     // GPIO port output speed register         Address offset 0x08
	uint32_t PUPDR;       // GPIO port pullup/pulldown register      Address offset 0x0C
	uint32_t IDR;         // GPIO port input data register           Address offset 0x10
	uint32_t ODR;         // GPIO port output data register          Address offset 0x14
	uint32_t BSRR;        // GPIO port bit set/reset register        Address offset 0x18
	uint32_t LCKR;        // GPIO port configuration lock register   Address offset 0x1C
	uint32_t AFR[2];      // GPIO alternate function low register    Address offset 0x20
}GPIO_RegDef_t;


#endif /* INC_STM32F407XX_H_ */






















