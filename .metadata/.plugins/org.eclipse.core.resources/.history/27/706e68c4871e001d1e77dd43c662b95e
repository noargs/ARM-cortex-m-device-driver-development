#ifndef INC_STM32F407XX_GPIO_DRIVER_H_
#define INC_STM32F407XX_GPIO_DRIVER_H_

#include "stm32f407xx.h"


// Configuration structure for GPIO pins
typedef struct {
	uint8_t gpio_pin_number;
	uint8_t gpio_pin_mode;
	uint8_t gpio_pin_speed;
	uint8_t gpio_pin_pu_pd_control;
	uint8_t gpio_pin_op_type;
	uint8_t gpio_pin_alt_fun;
}GPIO_PinConfig_t;



// Handle structure for GPIO pins
typedef struct {
	GPIO_RegDef_t *GPIOx;
	GPIO_PinConfig_t GPIO_PinConfig;

}GPIO_Handle_t;




//                              [APIs supported by this driver]
//              For more information about the APIs check the function definitions


// Peripheral clock setup
void GPIO_PCLK_Ctrl(GPIO_RegDef_t *gpiox, uint8_t en_or_di);

// Initialise and De-intialise GPIOs
void GPIO_Init(GPIO_Handle_t *gpio_handle);
void GPIO_DeInit(GPIO_RegDef_t *gpiox);

// Data read and write
uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *gpiox, uint8_t pin_number);
uint16_t GPIO_ReadFromInputPort(GPIO_RegDef_t *gpiox);
void GPIO_WriteToOutputPin(GPIO_RegDef_t *gpiox, uint8_t pin_number, uint8_t value);
void GPIO_WriteToOutputPort(GPIO_RegDef_t *gpiox, uint16_t value);
void GPIO_ToggleOutputPin(GPIO_RegDef_t *gpiox, uint8_t pin_number,);

// IRQ Configuration and ISR handling
void GPIO_IRQConfig(uint8_t irq_number, uint8_t irq_priority, uint8_t en_or_di);
void GPIO_IRQHandling(void);


#endif /* INC_STM32F407XX_GPIO_DRIVER_H_ */
