#include "stm32f407xx_gpio_driver.h"

// Peripheral clock setup

/*********************************************************************
 * @brief            - Enables or disable peripheral clock for
 *                           the given GPIO port
 *
 * @Param[in]        - Base address of the GPIO peripheral
 * @Param[in]        - Enable or Disable macro (i.e. ENABLE, DISABLE)
 *
 * @return           -
 *
 * @Note             -
 */
void GPIO_PCLK_Ctrl (GPIO_RegDef_t *gpiox, uint8_t en_or_di){

}

/*********************************************************************
 * @brief            -
 *
 * @Param[in]        -
 * @Param[in]        -
 * @Param[in]        -
 *
 * @return           -
 *
 * @Note             -
 */
void GPIO_Init (GPIO_Handle_t *gpio_handle){

}

/*********************************************************************
 * @brief            -
 *
 * @Param[in]        -
 * @Param[in]        -
 * @Param[in]        -
 *
 * @return           -
 *
 * @Note             -
 */
void GPIO_DeInit (GPIO_RegDef_t *gpiox){

}

// Data read and write

/*********************************************************************
 * @brief            -
 *
 * @Param[in]        -
 * @Param[in]        -
 * @Param[in]        -
 *
 * @return           -
 *
 * @Note             -
 */
uint8_t GPIO_ReadFromInputPin (GPIO_RegDef_t *gpiox, uint8_t pin_number){

}

/*********************************************************************
 * @brief            -
 *
 * @Param[in]        -
 * @Param[in]        -
 * @Param[in]        -
 *
 * @return           -
 *
 * @Note             -
 */
uint16_t GPIO_ReadFromInputPort (GPIO_RegDef_t *gpiox){

}

/*********************************************************************
 * @brief            -
 *
 * @Param[in]        -
 * @Param[in]        -
 * @Param[in]        -
 *
 * @return           -
 *
 * @Note             -
 */
void GPIO_WriteToOutputPin (GPIO_RegDef_t *gpiox, uint8_t pin_number, uint8_t value){

}

/*********************************************************************
 * @brief            -
 *
 * @Param[in]        -
 * @Param[in]        -
 * @Param[in]        -
 *
 * @return           -
 *
 * @Note             -
 */
void GPIO_WriteToOutputPort (GPIO_RegDef_t *gpiox, uint16_t value){

}

/*********************************************************************
 * @brief            -
 *
 * @Param[in]        -
 * @Param[in]        -
 * @Param[in]        -
 *
 * @return           -
 *
 * @Note             -
 */
void GPIO_ToggleOutputPin (GPIO_RegDef_t *gpiox, uint8_t pin_number){

}

// IRQ Configuration and ISR handling

/*********************************************************************
 * @brief            -
 *
 * @Param[in]        -
 * @Param[in]        -
 * @Param[in]        -
 *
 * @return           -
 *
 * @Note             -
 */
void GPIO_IRQConfig (uint8_t irq_number, uint8_t irq_priority, uint8_t en_or_di){

}

/*********************************************************************
 * @brief            -
 *
 * @Param[in]        -
 * @Param[in]        -
 * @Param[in]        -
 *
 * @return           -
 *
 * @Note             -
 */
void GPIO_IRQHandling (uint8_t pin_number){

}
