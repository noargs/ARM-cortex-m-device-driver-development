
007_Button_Interrupt.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000d68  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000078  08000f10  08000f10  00010f10  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000f88  08000f88  0002007c  2**0
                  CONTENTS
  4 .ARM          00000000  08000f88  08000f88  0002007c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000f88  08000f88  0002007c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000f88  08000f88  00010f88  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000f8c  08000f8c  00010f8c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000007c  20000000  08000f90  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0002007c  2**0
                  CONTENTS
 10 .bss          00000038  2000007c  2000007c  0002007c  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  200000b4  200000b4  0002007c  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0002007c  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000a25  00000000  00000000  000200ac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000032f  00000000  00000000  00020ad1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000120  00000000  00000000  00020e00  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 000000e8  00000000  00000000  00020f20  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002aa9  00000000  00000000  00021008  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000013d0  00000000  00000000  00023ab1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0000938d  00000000  00000000  00024e81  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  0002e20e  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000a34  00000000  00000000  0002e260  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	2000007c 	.word	0x2000007c
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000ef8 	.word	0x08000ef8

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000080 	.word	0x20000080
 80001e4:	08000ef8 	.word	0x08000ef8

080001e8 <main>:
uint32_t volatile *exti_mask_reg        = (uint32_t*) (0x40013C00 + 0x00);
uint32_t volatile *exti_edge_ctrl_reg   = (uint32_t*) (0x40013C00 + 0x08);
uint32_t volatile *nvic_irqen_reg       = (uint32_t*) 0xE000E100;

int main(void)
{
 80001e8:	b580      	push	{r7, lr}
 80001ea:	b082      	sub	sp, #8
 80001ec:	af00      	add	r7, sp, #0
	button_init();
 80001ee:	f000 f835 	bl	800025c <button_init>
	while(1){
		// disable interrupt
		*exti_mask_reg &= ~(1 << 0);
 80001f2:	4b15      	ldr	r3, [pc, #84]	; (8000248 <main+0x60>)
 80001f4:	681b      	ldr	r3, [r3, #0]
 80001f6:	681a      	ldr	r2, [r3, #0]
 80001f8:	4b13      	ldr	r3, [pc, #76]	; (8000248 <main+0x60>)
 80001fa:	681b      	ldr	r3, [r3, #0]
 80001fc:	f022 0201 	bic.w	r2, r2, #1
 8000200:	601a      	str	r2, [r3, #0]
		if(g_button_pressed) {
 8000202:	4b12      	ldr	r3, [pc, #72]	; (800024c <main+0x64>)
 8000204:	781b      	ldrb	r3, [r3, #0]
 8000206:	b2db      	uxtb	r3, r3
 8000208:	2b00      	cmp	r3, #0
 800020a:	d014      	beq.n	8000236 <main+0x4e>
			// some delay until button debounce gets over
			for(uint32_t volatile i=0;i<500000/2;i++);
 800020c:	2300      	movs	r3, #0
 800020e:	607b      	str	r3, [r7, #4]
 8000210:	e002      	b.n	8000218 <main+0x30>
 8000212:	687b      	ldr	r3, [r7, #4]
 8000214:	3301      	adds	r3, #1
 8000216:	607b      	str	r3, [r7, #4]
 8000218:	687b      	ldr	r3, [r7, #4]
 800021a:	4a0d      	ldr	r2, [pc, #52]	; (8000250 <main+0x68>)
 800021c:	4293      	cmp	r3, r2
 800021e:	d9f8      	bls.n	8000212 <main+0x2a>
			g_button_press_count++;
 8000220:	4b0c      	ldr	r3, [pc, #48]	; (8000254 <main+0x6c>)
 8000222:	681b      	ldr	r3, [r3, #0]
 8000224:	3301      	adds	r3, #1
 8000226:	4a0b      	ldr	r2, [pc, #44]	; (8000254 <main+0x6c>)
 8000228:	6013      	str	r3, [r2, #0]
			printf("Button is pressed\n"); // printf("button is pressed: %lu\n", g_button_press_count);
 800022a:	480b      	ldr	r0, [pc, #44]	; (8000258 <main+0x70>)
 800022c:	f000 f9d4 	bl	80005d8 <puts>
			g_button_pressed = 0;
 8000230:	4b06      	ldr	r3, [pc, #24]	; (800024c <main+0x64>)
 8000232:	2200      	movs	r2, #0
 8000234:	701a      	strb	r2, [r3, #0]
		}

		// enable interrupt
		*exti_mask_reg |= (1 << 0);
 8000236:	4b04      	ldr	r3, [pc, #16]	; (8000248 <main+0x60>)
 8000238:	681b      	ldr	r3, [r3, #0]
 800023a:	681a      	ldr	r2, [r3, #0]
 800023c:	4b02      	ldr	r3, [pc, #8]	; (8000248 <main+0x60>)
 800023e:	681b      	ldr	r3, [r3, #0]
 8000240:	f042 0201 	orr.w	r2, r2, #1
 8000244:	601a      	str	r2, [r3, #0]
		*exti_mask_reg &= ~(1 << 0);
 8000246:	e7d4      	b.n	80001f2 <main+0xa>
 8000248:	2000000c 	.word	0x2000000c
 800024c:	20000098 	.word	0x20000098
 8000250:	0003d08f 	.word	0x0003d08f
 8000254:	2000009c 	.word	0x2000009c
 8000258:	08000f10 	.word	0x08000f10

0800025c <button_init>:
	}
}

// configuration of gpio pin, exti edge detection, masking and NVIC irq enable
void button_init(void) {
 800025c:	b480      	push	{r7}
 800025e:	af00      	add	r7, sp, #0
	// GPIOA clock enable
	*clk_ctrl_reg |= (1 << 0);
 8000260:	4b16      	ldr	r3, [pc, #88]	; (80002bc <button_init+0x60>)
 8000262:	681b      	ldr	r3, [r3, #0]
 8000264:	681a      	ldr	r2, [r3, #0]
 8000266:	4b15      	ldr	r3, [pc, #84]	; (80002bc <button_init+0x60>)
 8000268:	681b      	ldr	r3, [r3, #0]
 800026a:	f042 0201 	orr.w	r2, r2, #1
 800026e:	601a      	str	r2, [r3, #0]

	// SYSCFG clock enable
	*clk_ctrl_reg_apb2 |= (1 << 14);
 8000270:	4b13      	ldr	r3, [pc, #76]	; (80002c0 <button_init+0x64>)
 8000272:	681b      	ldr	r3, [r3, #0]
 8000274:	681a      	ldr	r2, [r3, #0]
 8000276:	4b12      	ldr	r3, [pc, #72]	; (80002c0 <button_init+0x64>)
 8000278:	681b      	ldr	r3, [r3, #0]
 800027a:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800027e:	601a      	str	r2, [r3, #0]

	// Edge detection configuration
	*exti_edge_ctrl_reg |= (1 << 0);
 8000280:	4b10      	ldr	r3, [pc, #64]	; (80002c4 <button_init+0x68>)
 8000282:	681b      	ldr	r3, [r3, #0]
 8000284:	681a      	ldr	r2, [r3, #0]
 8000286:	4b0f      	ldr	r3, [pc, #60]	; (80002c4 <button_init+0x68>)
 8000288:	681b      	ldr	r3, [r3, #0]
 800028a:	f042 0201 	orr.w	r2, r2, #1
 800028e:	601a      	str	r2, [r3, #0]

	// EXTI interrupt enable
	*exti_mask_reg |= (1 << 0);
 8000290:	4b0d      	ldr	r3, [pc, #52]	; (80002c8 <button_init+0x6c>)
 8000292:	681b      	ldr	r3, [r3, #0]
 8000294:	681a      	ldr	r2, [r3, #0]
 8000296:	4b0c      	ldr	r3, [pc, #48]	; (80002c8 <button_init+0x6c>)
 8000298:	681b      	ldr	r3, [r3, #0]
 800029a:	f042 0201 	orr.w	r2, r2, #1
 800029e:	601a      	str	r2, [r3, #0]

	// NVIC irq enable
	*nvic_irqen_reg |= (1 << 6);
 80002a0:	4b0a      	ldr	r3, [pc, #40]	; (80002cc <button_init+0x70>)
 80002a2:	681b      	ldr	r3, [r3, #0]
 80002a4:	681a      	ldr	r2, [r3, #0]
 80002a6:	4b09      	ldr	r3, [pc, #36]	; (80002cc <button_init+0x70>)
 80002a8:	681b      	ldr	r3, [r3, #0]
 80002aa:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80002ae:	601a      	str	r2, [r3, #0]
}
 80002b0:	bf00      	nop
 80002b2:	46bd      	mov	sp, r7
 80002b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002b8:	4770      	bx	lr
 80002ba:	bf00      	nop
 80002bc:	20000004 	.word	0x20000004
 80002c0:	20000008 	.word	0x20000008
 80002c4:	20000010 	.word	0x20000010
 80002c8:	2000000c 	.word	0x2000000c
 80002cc:	20000014 	.word	0x20000014

080002d0 <EXTI0_IRQHandler>:


void EXTI0_IRQHandler(void) {
 80002d0:	b480      	push	{r7}
 80002d2:	af00      	add	r7, sp, #0
	// make this flag set if button pressed
	g_button_pressed = 1;
 80002d4:	4b07      	ldr	r3, [pc, #28]	; (80002f4 <EXTI0_IRQHandler+0x24>)
 80002d6:	2201      	movs	r2, #1
 80002d8:	701a      	strb	r2, [r3, #0]

	// clearing of EXTI interrupt pending bit
	// [Caution] if you don't clear this bit with 1, there will be infinite interrupts
	*exti_pending_reg |= (1 << 0);
 80002da:	4b07      	ldr	r3, [pc, #28]	; (80002f8 <EXTI0_IRQHandler+0x28>)
 80002dc:	681b      	ldr	r3, [r3, #0]
 80002de:	681a      	ldr	r2, [r3, #0]
 80002e0:	4b05      	ldr	r3, [pc, #20]	; (80002f8 <EXTI0_IRQHandler+0x28>)
 80002e2:	681b      	ldr	r3, [r3, #0]
 80002e4:	f042 0201 	orr.w	r2, r2, #1
 80002e8:	601a      	str	r2, [r3, #0]
}
 80002ea:	bf00      	nop
 80002ec:	46bd      	mov	sp, r7
 80002ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002f2:	4770      	bx	lr
 80002f4:	20000098 	.word	0x20000098
 80002f8:	20000000 	.word	0x20000000

080002fc <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80002fc:	b580      	push	{r7, lr}
 80002fe:	b086      	sub	sp, #24
 8000300:	af00      	add	r7, sp, #0
 8000302:	60f8      	str	r0, [r7, #12]
 8000304:	60b9      	str	r1, [r7, #8]
 8000306:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000308:	2300      	movs	r3, #0
 800030a:	617b      	str	r3, [r7, #20]
 800030c:	e00a      	b.n	8000324 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800030e:	f3af 8000 	nop.w
 8000312:	4601      	mov	r1, r0
 8000314:	68bb      	ldr	r3, [r7, #8]
 8000316:	1c5a      	adds	r2, r3, #1
 8000318:	60ba      	str	r2, [r7, #8]
 800031a:	b2ca      	uxtb	r2, r1
 800031c:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800031e:	697b      	ldr	r3, [r7, #20]
 8000320:	3301      	adds	r3, #1
 8000322:	617b      	str	r3, [r7, #20]
 8000324:	697a      	ldr	r2, [r7, #20]
 8000326:	687b      	ldr	r3, [r7, #4]
 8000328:	429a      	cmp	r2, r3
 800032a:	dbf0      	blt.n	800030e <_read+0x12>
	}

return len;
 800032c:	687b      	ldr	r3, [r7, #4]
}
 800032e:	4618      	mov	r0, r3
 8000330:	3718      	adds	r7, #24
 8000332:	46bd      	mov	sp, r7
 8000334:	bd80      	pop	{r7, pc}

08000336 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000336:	b580      	push	{r7, lr}
 8000338:	b086      	sub	sp, #24
 800033a:	af00      	add	r7, sp, #0
 800033c:	60f8      	str	r0, [r7, #12]
 800033e:	60b9      	str	r1, [r7, #8]
 8000340:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000342:	2300      	movs	r3, #0
 8000344:	617b      	str	r3, [r7, #20]
 8000346:	e009      	b.n	800035c <_write+0x26>
	{
		__io_putchar(*ptr++);
 8000348:	68bb      	ldr	r3, [r7, #8]
 800034a:	1c5a      	adds	r2, r3, #1
 800034c:	60ba      	str	r2, [r7, #8]
 800034e:	781b      	ldrb	r3, [r3, #0]
 8000350:	4618      	mov	r0, r3
 8000352:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000356:	697b      	ldr	r3, [r7, #20]
 8000358:	3301      	adds	r3, #1
 800035a:	617b      	str	r3, [r7, #20]
 800035c:	697a      	ldr	r2, [r7, #20]
 800035e:	687b      	ldr	r3, [r7, #4]
 8000360:	429a      	cmp	r2, r3
 8000362:	dbf1      	blt.n	8000348 <_write+0x12>
	}
	return len;
 8000364:	687b      	ldr	r3, [r7, #4]
}
 8000366:	4618      	mov	r0, r3
 8000368:	3718      	adds	r7, #24
 800036a:	46bd      	mov	sp, r7
 800036c:	bd80      	pop	{r7, pc}

0800036e <_close>:

int _close(int file)
{
 800036e:	b480      	push	{r7}
 8000370:	b083      	sub	sp, #12
 8000372:	af00      	add	r7, sp, #0
 8000374:	6078      	str	r0, [r7, #4]
	return -1;
 8000376:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 800037a:	4618      	mov	r0, r3
 800037c:	370c      	adds	r7, #12
 800037e:	46bd      	mov	sp, r7
 8000380:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000384:	4770      	bx	lr

08000386 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000386:	b480      	push	{r7}
 8000388:	b083      	sub	sp, #12
 800038a:	af00      	add	r7, sp, #0
 800038c:	6078      	str	r0, [r7, #4]
 800038e:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8000390:	683b      	ldr	r3, [r7, #0]
 8000392:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000396:	605a      	str	r2, [r3, #4]
	return 0;
 8000398:	2300      	movs	r3, #0
}
 800039a:	4618      	mov	r0, r3
 800039c:	370c      	adds	r7, #12
 800039e:	46bd      	mov	sp, r7
 80003a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003a4:	4770      	bx	lr

080003a6 <_isatty>:

int _isatty(int file)
{
 80003a6:	b480      	push	{r7}
 80003a8:	b083      	sub	sp, #12
 80003aa:	af00      	add	r7, sp, #0
 80003ac:	6078      	str	r0, [r7, #4]
	return 1;
 80003ae:	2301      	movs	r3, #1
}
 80003b0:	4618      	mov	r0, r3
 80003b2:	370c      	adds	r7, #12
 80003b4:	46bd      	mov	sp, r7
 80003b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003ba:	4770      	bx	lr

080003bc <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80003bc:	b480      	push	{r7}
 80003be:	b085      	sub	sp, #20
 80003c0:	af00      	add	r7, sp, #0
 80003c2:	60f8      	str	r0, [r7, #12]
 80003c4:	60b9      	str	r1, [r7, #8]
 80003c6:	607a      	str	r2, [r7, #4]
	return 0;
 80003c8:	2300      	movs	r3, #0
}
 80003ca:	4618      	mov	r0, r3
 80003cc:	3714      	adds	r7, #20
 80003ce:	46bd      	mov	sp, r7
 80003d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003d4:	4770      	bx	lr
	...

080003d8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80003d8:	b580      	push	{r7, lr}
 80003da:	b086      	sub	sp, #24
 80003dc:	af00      	add	r7, sp, #0
 80003de:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80003e0:	4a14      	ldr	r2, [pc, #80]	; (8000434 <_sbrk+0x5c>)
 80003e2:	4b15      	ldr	r3, [pc, #84]	; (8000438 <_sbrk+0x60>)
 80003e4:	1ad3      	subs	r3, r2, r3
 80003e6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80003e8:	697b      	ldr	r3, [r7, #20]
 80003ea:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80003ec:	4b13      	ldr	r3, [pc, #76]	; (800043c <_sbrk+0x64>)
 80003ee:	681b      	ldr	r3, [r3, #0]
 80003f0:	2b00      	cmp	r3, #0
 80003f2:	d102      	bne.n	80003fa <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80003f4:	4b11      	ldr	r3, [pc, #68]	; (800043c <_sbrk+0x64>)
 80003f6:	4a12      	ldr	r2, [pc, #72]	; (8000440 <_sbrk+0x68>)
 80003f8:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80003fa:	4b10      	ldr	r3, [pc, #64]	; (800043c <_sbrk+0x64>)
 80003fc:	681a      	ldr	r2, [r3, #0]
 80003fe:	687b      	ldr	r3, [r7, #4]
 8000400:	4413      	add	r3, r2
 8000402:	693a      	ldr	r2, [r7, #16]
 8000404:	429a      	cmp	r2, r3
 8000406:	d207      	bcs.n	8000418 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000408:	f000 f846 	bl	8000498 <__errno>
 800040c:	4603      	mov	r3, r0
 800040e:	220c      	movs	r2, #12
 8000410:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000412:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8000416:	e009      	b.n	800042c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000418:	4b08      	ldr	r3, [pc, #32]	; (800043c <_sbrk+0x64>)
 800041a:	681b      	ldr	r3, [r3, #0]
 800041c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800041e:	4b07      	ldr	r3, [pc, #28]	; (800043c <_sbrk+0x64>)
 8000420:	681a      	ldr	r2, [r3, #0]
 8000422:	687b      	ldr	r3, [r7, #4]
 8000424:	4413      	add	r3, r2
 8000426:	4a05      	ldr	r2, [pc, #20]	; (800043c <_sbrk+0x64>)
 8000428:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800042a:	68fb      	ldr	r3, [r7, #12]
}
 800042c:	4618      	mov	r0, r3
 800042e:	3718      	adds	r7, #24
 8000430:	46bd      	mov	sp, r7
 8000432:	bd80      	pop	{r7, pc}
 8000434:	20020000 	.word	0x20020000
 8000438:	00000400 	.word	0x00000400
 800043c:	200000a0 	.word	0x200000a0
 8000440:	200000b8 	.word	0x200000b8

08000444 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000444:	480d      	ldr	r0, [pc, #52]	; (800047c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000446:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000448:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800044c:	480c      	ldr	r0, [pc, #48]	; (8000480 <LoopForever+0x6>)
  ldr r1, =_edata
 800044e:	490d      	ldr	r1, [pc, #52]	; (8000484 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000450:	4a0d      	ldr	r2, [pc, #52]	; (8000488 <LoopForever+0xe>)
  movs r3, #0
 8000452:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000454:	e002      	b.n	800045c <LoopCopyDataInit>

08000456 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000456:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000458:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800045a:	3304      	adds	r3, #4

0800045c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800045c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800045e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000460:	d3f9      	bcc.n	8000456 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000462:	4a0a      	ldr	r2, [pc, #40]	; (800048c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000464:	4c0a      	ldr	r4, [pc, #40]	; (8000490 <LoopForever+0x16>)
  movs r3, #0
 8000466:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000468:	e001      	b.n	800046e <LoopFillZerobss>

0800046a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800046a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800046c:	3204      	adds	r2, #4

0800046e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800046e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000470:	d3fb      	bcc.n	800046a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000472:	f000 f817 	bl	80004a4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000476:	f7ff feb7 	bl	80001e8 <main>

0800047a <LoopForever>:

LoopForever:
    b LoopForever
 800047a:	e7fe      	b.n	800047a <LoopForever>
  ldr   r0, =_estack
 800047c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000480:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000484:	2000007c 	.word	0x2000007c
  ldr r2, =_sidata
 8000488:	08000f90 	.word	0x08000f90
  ldr r2, =_sbss
 800048c:	2000007c 	.word	0x2000007c
  ldr r4, =_ebss
 8000490:	200000b4 	.word	0x200000b4

08000494 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000494:	e7fe      	b.n	8000494 <ADC_IRQHandler>
	...

08000498 <__errno>:
 8000498:	4b01      	ldr	r3, [pc, #4]	; (80004a0 <__errno+0x8>)
 800049a:	6818      	ldr	r0, [r3, #0]
 800049c:	4770      	bx	lr
 800049e:	bf00      	nop
 80004a0:	20000018 	.word	0x20000018

080004a4 <__libc_init_array>:
 80004a4:	b570      	push	{r4, r5, r6, lr}
 80004a6:	4d0d      	ldr	r5, [pc, #52]	; (80004dc <__libc_init_array+0x38>)
 80004a8:	4c0d      	ldr	r4, [pc, #52]	; (80004e0 <__libc_init_array+0x3c>)
 80004aa:	1b64      	subs	r4, r4, r5
 80004ac:	10a4      	asrs	r4, r4, #2
 80004ae:	2600      	movs	r6, #0
 80004b0:	42a6      	cmp	r6, r4
 80004b2:	d109      	bne.n	80004c8 <__libc_init_array+0x24>
 80004b4:	4d0b      	ldr	r5, [pc, #44]	; (80004e4 <__libc_init_array+0x40>)
 80004b6:	4c0c      	ldr	r4, [pc, #48]	; (80004e8 <__libc_init_array+0x44>)
 80004b8:	f000 fd1e 	bl	8000ef8 <_init>
 80004bc:	1b64      	subs	r4, r4, r5
 80004be:	10a4      	asrs	r4, r4, #2
 80004c0:	2600      	movs	r6, #0
 80004c2:	42a6      	cmp	r6, r4
 80004c4:	d105      	bne.n	80004d2 <__libc_init_array+0x2e>
 80004c6:	bd70      	pop	{r4, r5, r6, pc}
 80004c8:	f855 3b04 	ldr.w	r3, [r5], #4
 80004cc:	4798      	blx	r3
 80004ce:	3601      	adds	r6, #1
 80004d0:	e7ee      	b.n	80004b0 <__libc_init_array+0xc>
 80004d2:	f855 3b04 	ldr.w	r3, [r5], #4
 80004d6:	4798      	blx	r3
 80004d8:	3601      	adds	r6, #1
 80004da:	e7f2      	b.n	80004c2 <__libc_init_array+0x1e>
 80004dc:	08000f88 	.word	0x08000f88
 80004e0:	08000f88 	.word	0x08000f88
 80004e4:	08000f88 	.word	0x08000f88
 80004e8:	08000f8c 	.word	0x08000f8c

080004ec <memset>:
 80004ec:	4402      	add	r2, r0
 80004ee:	4603      	mov	r3, r0
 80004f0:	4293      	cmp	r3, r2
 80004f2:	d100      	bne.n	80004f6 <memset+0xa>
 80004f4:	4770      	bx	lr
 80004f6:	f803 1b01 	strb.w	r1, [r3], #1
 80004fa:	e7f9      	b.n	80004f0 <memset+0x4>

080004fc <_puts_r>:
 80004fc:	b570      	push	{r4, r5, r6, lr}
 80004fe:	460e      	mov	r6, r1
 8000500:	4605      	mov	r5, r0
 8000502:	b118      	cbz	r0, 800050c <_puts_r+0x10>
 8000504:	6983      	ldr	r3, [r0, #24]
 8000506:	b90b      	cbnz	r3, 800050c <_puts_r+0x10>
 8000508:	f000 fa48 	bl	800099c <__sinit>
 800050c:	69ab      	ldr	r3, [r5, #24]
 800050e:	68ac      	ldr	r4, [r5, #8]
 8000510:	b913      	cbnz	r3, 8000518 <_puts_r+0x1c>
 8000512:	4628      	mov	r0, r5
 8000514:	f000 fa42 	bl	800099c <__sinit>
 8000518:	4b2c      	ldr	r3, [pc, #176]	; (80005cc <_puts_r+0xd0>)
 800051a:	429c      	cmp	r4, r3
 800051c:	d120      	bne.n	8000560 <_puts_r+0x64>
 800051e:	686c      	ldr	r4, [r5, #4]
 8000520:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000522:	07db      	lsls	r3, r3, #31
 8000524:	d405      	bmi.n	8000532 <_puts_r+0x36>
 8000526:	89a3      	ldrh	r3, [r4, #12]
 8000528:	0598      	lsls	r0, r3, #22
 800052a:	d402      	bmi.n	8000532 <_puts_r+0x36>
 800052c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800052e:	f000 fad3 	bl	8000ad8 <__retarget_lock_acquire_recursive>
 8000532:	89a3      	ldrh	r3, [r4, #12]
 8000534:	0719      	lsls	r1, r3, #28
 8000536:	d51d      	bpl.n	8000574 <_puts_r+0x78>
 8000538:	6923      	ldr	r3, [r4, #16]
 800053a:	b1db      	cbz	r3, 8000574 <_puts_r+0x78>
 800053c:	3e01      	subs	r6, #1
 800053e:	68a3      	ldr	r3, [r4, #8]
 8000540:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000544:	3b01      	subs	r3, #1
 8000546:	60a3      	str	r3, [r4, #8]
 8000548:	bb39      	cbnz	r1, 800059a <_puts_r+0x9e>
 800054a:	2b00      	cmp	r3, #0
 800054c:	da38      	bge.n	80005c0 <_puts_r+0xc4>
 800054e:	4622      	mov	r2, r4
 8000550:	210a      	movs	r1, #10
 8000552:	4628      	mov	r0, r5
 8000554:	f000 f848 	bl	80005e8 <__swbuf_r>
 8000558:	3001      	adds	r0, #1
 800055a:	d011      	beq.n	8000580 <_puts_r+0x84>
 800055c:	250a      	movs	r5, #10
 800055e:	e011      	b.n	8000584 <_puts_r+0x88>
 8000560:	4b1b      	ldr	r3, [pc, #108]	; (80005d0 <_puts_r+0xd4>)
 8000562:	429c      	cmp	r4, r3
 8000564:	d101      	bne.n	800056a <_puts_r+0x6e>
 8000566:	68ac      	ldr	r4, [r5, #8]
 8000568:	e7da      	b.n	8000520 <_puts_r+0x24>
 800056a:	4b1a      	ldr	r3, [pc, #104]	; (80005d4 <_puts_r+0xd8>)
 800056c:	429c      	cmp	r4, r3
 800056e:	bf08      	it	eq
 8000570:	68ec      	ldreq	r4, [r5, #12]
 8000572:	e7d5      	b.n	8000520 <_puts_r+0x24>
 8000574:	4621      	mov	r1, r4
 8000576:	4628      	mov	r0, r5
 8000578:	f000 f888 	bl	800068c <__swsetup_r>
 800057c:	2800      	cmp	r0, #0
 800057e:	d0dd      	beq.n	800053c <_puts_r+0x40>
 8000580:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 8000584:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000586:	07da      	lsls	r2, r3, #31
 8000588:	d405      	bmi.n	8000596 <_puts_r+0x9a>
 800058a:	89a3      	ldrh	r3, [r4, #12]
 800058c:	059b      	lsls	r3, r3, #22
 800058e:	d402      	bmi.n	8000596 <_puts_r+0x9a>
 8000590:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000592:	f000 faa2 	bl	8000ada <__retarget_lock_release_recursive>
 8000596:	4628      	mov	r0, r5
 8000598:	bd70      	pop	{r4, r5, r6, pc}
 800059a:	2b00      	cmp	r3, #0
 800059c:	da04      	bge.n	80005a8 <_puts_r+0xac>
 800059e:	69a2      	ldr	r2, [r4, #24]
 80005a0:	429a      	cmp	r2, r3
 80005a2:	dc06      	bgt.n	80005b2 <_puts_r+0xb6>
 80005a4:	290a      	cmp	r1, #10
 80005a6:	d004      	beq.n	80005b2 <_puts_r+0xb6>
 80005a8:	6823      	ldr	r3, [r4, #0]
 80005aa:	1c5a      	adds	r2, r3, #1
 80005ac:	6022      	str	r2, [r4, #0]
 80005ae:	7019      	strb	r1, [r3, #0]
 80005b0:	e7c5      	b.n	800053e <_puts_r+0x42>
 80005b2:	4622      	mov	r2, r4
 80005b4:	4628      	mov	r0, r5
 80005b6:	f000 f817 	bl	80005e8 <__swbuf_r>
 80005ba:	3001      	adds	r0, #1
 80005bc:	d1bf      	bne.n	800053e <_puts_r+0x42>
 80005be:	e7df      	b.n	8000580 <_puts_r+0x84>
 80005c0:	6823      	ldr	r3, [r4, #0]
 80005c2:	250a      	movs	r5, #10
 80005c4:	1c5a      	adds	r2, r3, #1
 80005c6:	6022      	str	r2, [r4, #0]
 80005c8:	701d      	strb	r5, [r3, #0]
 80005ca:	e7db      	b.n	8000584 <_puts_r+0x88>
 80005cc:	08000f48 	.word	0x08000f48
 80005d0:	08000f68 	.word	0x08000f68
 80005d4:	08000f28 	.word	0x08000f28

080005d8 <puts>:
 80005d8:	4b02      	ldr	r3, [pc, #8]	; (80005e4 <puts+0xc>)
 80005da:	4601      	mov	r1, r0
 80005dc:	6818      	ldr	r0, [r3, #0]
 80005de:	f7ff bf8d 	b.w	80004fc <_puts_r>
 80005e2:	bf00      	nop
 80005e4:	20000018 	.word	0x20000018

080005e8 <__swbuf_r>:
 80005e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80005ea:	460e      	mov	r6, r1
 80005ec:	4614      	mov	r4, r2
 80005ee:	4605      	mov	r5, r0
 80005f0:	b118      	cbz	r0, 80005fa <__swbuf_r+0x12>
 80005f2:	6983      	ldr	r3, [r0, #24]
 80005f4:	b90b      	cbnz	r3, 80005fa <__swbuf_r+0x12>
 80005f6:	f000 f9d1 	bl	800099c <__sinit>
 80005fa:	4b21      	ldr	r3, [pc, #132]	; (8000680 <__swbuf_r+0x98>)
 80005fc:	429c      	cmp	r4, r3
 80005fe:	d12b      	bne.n	8000658 <__swbuf_r+0x70>
 8000600:	686c      	ldr	r4, [r5, #4]
 8000602:	69a3      	ldr	r3, [r4, #24]
 8000604:	60a3      	str	r3, [r4, #8]
 8000606:	89a3      	ldrh	r3, [r4, #12]
 8000608:	071a      	lsls	r2, r3, #28
 800060a:	d52f      	bpl.n	800066c <__swbuf_r+0x84>
 800060c:	6923      	ldr	r3, [r4, #16]
 800060e:	b36b      	cbz	r3, 800066c <__swbuf_r+0x84>
 8000610:	6923      	ldr	r3, [r4, #16]
 8000612:	6820      	ldr	r0, [r4, #0]
 8000614:	1ac0      	subs	r0, r0, r3
 8000616:	6963      	ldr	r3, [r4, #20]
 8000618:	b2f6      	uxtb	r6, r6
 800061a:	4283      	cmp	r3, r0
 800061c:	4637      	mov	r7, r6
 800061e:	dc04      	bgt.n	800062a <__swbuf_r+0x42>
 8000620:	4621      	mov	r1, r4
 8000622:	4628      	mov	r0, r5
 8000624:	f000 f926 	bl	8000874 <_fflush_r>
 8000628:	bb30      	cbnz	r0, 8000678 <__swbuf_r+0x90>
 800062a:	68a3      	ldr	r3, [r4, #8]
 800062c:	3b01      	subs	r3, #1
 800062e:	60a3      	str	r3, [r4, #8]
 8000630:	6823      	ldr	r3, [r4, #0]
 8000632:	1c5a      	adds	r2, r3, #1
 8000634:	6022      	str	r2, [r4, #0]
 8000636:	701e      	strb	r6, [r3, #0]
 8000638:	6963      	ldr	r3, [r4, #20]
 800063a:	3001      	adds	r0, #1
 800063c:	4283      	cmp	r3, r0
 800063e:	d004      	beq.n	800064a <__swbuf_r+0x62>
 8000640:	89a3      	ldrh	r3, [r4, #12]
 8000642:	07db      	lsls	r3, r3, #31
 8000644:	d506      	bpl.n	8000654 <__swbuf_r+0x6c>
 8000646:	2e0a      	cmp	r6, #10
 8000648:	d104      	bne.n	8000654 <__swbuf_r+0x6c>
 800064a:	4621      	mov	r1, r4
 800064c:	4628      	mov	r0, r5
 800064e:	f000 f911 	bl	8000874 <_fflush_r>
 8000652:	b988      	cbnz	r0, 8000678 <__swbuf_r+0x90>
 8000654:	4638      	mov	r0, r7
 8000656:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000658:	4b0a      	ldr	r3, [pc, #40]	; (8000684 <__swbuf_r+0x9c>)
 800065a:	429c      	cmp	r4, r3
 800065c:	d101      	bne.n	8000662 <__swbuf_r+0x7a>
 800065e:	68ac      	ldr	r4, [r5, #8]
 8000660:	e7cf      	b.n	8000602 <__swbuf_r+0x1a>
 8000662:	4b09      	ldr	r3, [pc, #36]	; (8000688 <__swbuf_r+0xa0>)
 8000664:	429c      	cmp	r4, r3
 8000666:	bf08      	it	eq
 8000668:	68ec      	ldreq	r4, [r5, #12]
 800066a:	e7ca      	b.n	8000602 <__swbuf_r+0x1a>
 800066c:	4621      	mov	r1, r4
 800066e:	4628      	mov	r0, r5
 8000670:	f000 f80c 	bl	800068c <__swsetup_r>
 8000674:	2800      	cmp	r0, #0
 8000676:	d0cb      	beq.n	8000610 <__swbuf_r+0x28>
 8000678:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 800067c:	e7ea      	b.n	8000654 <__swbuf_r+0x6c>
 800067e:	bf00      	nop
 8000680:	08000f48 	.word	0x08000f48
 8000684:	08000f68 	.word	0x08000f68
 8000688:	08000f28 	.word	0x08000f28

0800068c <__swsetup_r>:
 800068c:	4b32      	ldr	r3, [pc, #200]	; (8000758 <__swsetup_r+0xcc>)
 800068e:	b570      	push	{r4, r5, r6, lr}
 8000690:	681d      	ldr	r5, [r3, #0]
 8000692:	4606      	mov	r6, r0
 8000694:	460c      	mov	r4, r1
 8000696:	b125      	cbz	r5, 80006a2 <__swsetup_r+0x16>
 8000698:	69ab      	ldr	r3, [r5, #24]
 800069a:	b913      	cbnz	r3, 80006a2 <__swsetup_r+0x16>
 800069c:	4628      	mov	r0, r5
 800069e:	f000 f97d 	bl	800099c <__sinit>
 80006a2:	4b2e      	ldr	r3, [pc, #184]	; (800075c <__swsetup_r+0xd0>)
 80006a4:	429c      	cmp	r4, r3
 80006a6:	d10f      	bne.n	80006c8 <__swsetup_r+0x3c>
 80006a8:	686c      	ldr	r4, [r5, #4]
 80006aa:	89a3      	ldrh	r3, [r4, #12]
 80006ac:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80006b0:	0719      	lsls	r1, r3, #28
 80006b2:	d42c      	bmi.n	800070e <__swsetup_r+0x82>
 80006b4:	06dd      	lsls	r5, r3, #27
 80006b6:	d411      	bmi.n	80006dc <__swsetup_r+0x50>
 80006b8:	2309      	movs	r3, #9
 80006ba:	6033      	str	r3, [r6, #0]
 80006bc:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80006c0:	81a3      	strh	r3, [r4, #12]
 80006c2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80006c6:	e03e      	b.n	8000746 <__swsetup_r+0xba>
 80006c8:	4b25      	ldr	r3, [pc, #148]	; (8000760 <__swsetup_r+0xd4>)
 80006ca:	429c      	cmp	r4, r3
 80006cc:	d101      	bne.n	80006d2 <__swsetup_r+0x46>
 80006ce:	68ac      	ldr	r4, [r5, #8]
 80006d0:	e7eb      	b.n	80006aa <__swsetup_r+0x1e>
 80006d2:	4b24      	ldr	r3, [pc, #144]	; (8000764 <__swsetup_r+0xd8>)
 80006d4:	429c      	cmp	r4, r3
 80006d6:	bf08      	it	eq
 80006d8:	68ec      	ldreq	r4, [r5, #12]
 80006da:	e7e6      	b.n	80006aa <__swsetup_r+0x1e>
 80006dc:	0758      	lsls	r0, r3, #29
 80006de:	d512      	bpl.n	8000706 <__swsetup_r+0x7a>
 80006e0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80006e2:	b141      	cbz	r1, 80006f6 <__swsetup_r+0x6a>
 80006e4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80006e8:	4299      	cmp	r1, r3
 80006ea:	d002      	beq.n	80006f2 <__swsetup_r+0x66>
 80006ec:	4630      	mov	r0, r6
 80006ee:	f000 fa5b 	bl	8000ba8 <_free_r>
 80006f2:	2300      	movs	r3, #0
 80006f4:	6363      	str	r3, [r4, #52]	; 0x34
 80006f6:	89a3      	ldrh	r3, [r4, #12]
 80006f8:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80006fc:	81a3      	strh	r3, [r4, #12]
 80006fe:	2300      	movs	r3, #0
 8000700:	6063      	str	r3, [r4, #4]
 8000702:	6923      	ldr	r3, [r4, #16]
 8000704:	6023      	str	r3, [r4, #0]
 8000706:	89a3      	ldrh	r3, [r4, #12]
 8000708:	f043 0308 	orr.w	r3, r3, #8
 800070c:	81a3      	strh	r3, [r4, #12]
 800070e:	6923      	ldr	r3, [r4, #16]
 8000710:	b94b      	cbnz	r3, 8000726 <__swsetup_r+0x9a>
 8000712:	89a3      	ldrh	r3, [r4, #12]
 8000714:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000718:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800071c:	d003      	beq.n	8000726 <__swsetup_r+0x9a>
 800071e:	4621      	mov	r1, r4
 8000720:	4630      	mov	r0, r6
 8000722:	f000 fa01 	bl	8000b28 <__smakebuf_r>
 8000726:	89a0      	ldrh	r0, [r4, #12]
 8000728:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800072c:	f010 0301 	ands.w	r3, r0, #1
 8000730:	d00a      	beq.n	8000748 <__swsetup_r+0xbc>
 8000732:	2300      	movs	r3, #0
 8000734:	60a3      	str	r3, [r4, #8]
 8000736:	6963      	ldr	r3, [r4, #20]
 8000738:	425b      	negs	r3, r3
 800073a:	61a3      	str	r3, [r4, #24]
 800073c:	6923      	ldr	r3, [r4, #16]
 800073e:	b943      	cbnz	r3, 8000752 <__swsetup_r+0xc6>
 8000740:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000744:	d1ba      	bne.n	80006bc <__swsetup_r+0x30>
 8000746:	bd70      	pop	{r4, r5, r6, pc}
 8000748:	0781      	lsls	r1, r0, #30
 800074a:	bf58      	it	pl
 800074c:	6963      	ldrpl	r3, [r4, #20]
 800074e:	60a3      	str	r3, [r4, #8]
 8000750:	e7f4      	b.n	800073c <__swsetup_r+0xb0>
 8000752:	2000      	movs	r0, #0
 8000754:	e7f7      	b.n	8000746 <__swsetup_r+0xba>
 8000756:	bf00      	nop
 8000758:	20000018 	.word	0x20000018
 800075c:	08000f48 	.word	0x08000f48
 8000760:	08000f68 	.word	0x08000f68
 8000764:	08000f28 	.word	0x08000f28

08000768 <__sflush_r>:
 8000768:	898a      	ldrh	r2, [r1, #12]
 800076a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800076e:	4605      	mov	r5, r0
 8000770:	0710      	lsls	r0, r2, #28
 8000772:	460c      	mov	r4, r1
 8000774:	d458      	bmi.n	8000828 <__sflush_r+0xc0>
 8000776:	684b      	ldr	r3, [r1, #4]
 8000778:	2b00      	cmp	r3, #0
 800077a:	dc05      	bgt.n	8000788 <__sflush_r+0x20>
 800077c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800077e:	2b00      	cmp	r3, #0
 8000780:	dc02      	bgt.n	8000788 <__sflush_r+0x20>
 8000782:	2000      	movs	r0, #0
 8000784:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000788:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800078a:	2e00      	cmp	r6, #0
 800078c:	d0f9      	beq.n	8000782 <__sflush_r+0x1a>
 800078e:	2300      	movs	r3, #0
 8000790:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000794:	682f      	ldr	r7, [r5, #0]
 8000796:	602b      	str	r3, [r5, #0]
 8000798:	d032      	beq.n	8000800 <__sflush_r+0x98>
 800079a:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800079c:	89a3      	ldrh	r3, [r4, #12]
 800079e:	075a      	lsls	r2, r3, #29
 80007a0:	d505      	bpl.n	80007ae <__sflush_r+0x46>
 80007a2:	6863      	ldr	r3, [r4, #4]
 80007a4:	1ac0      	subs	r0, r0, r3
 80007a6:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80007a8:	b10b      	cbz	r3, 80007ae <__sflush_r+0x46>
 80007aa:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80007ac:	1ac0      	subs	r0, r0, r3
 80007ae:	2300      	movs	r3, #0
 80007b0:	4602      	mov	r2, r0
 80007b2:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80007b4:	6a21      	ldr	r1, [r4, #32]
 80007b6:	4628      	mov	r0, r5
 80007b8:	47b0      	blx	r6
 80007ba:	1c43      	adds	r3, r0, #1
 80007bc:	89a3      	ldrh	r3, [r4, #12]
 80007be:	d106      	bne.n	80007ce <__sflush_r+0x66>
 80007c0:	6829      	ldr	r1, [r5, #0]
 80007c2:	291d      	cmp	r1, #29
 80007c4:	d82c      	bhi.n	8000820 <__sflush_r+0xb8>
 80007c6:	4a2a      	ldr	r2, [pc, #168]	; (8000870 <__sflush_r+0x108>)
 80007c8:	40ca      	lsrs	r2, r1
 80007ca:	07d6      	lsls	r6, r2, #31
 80007cc:	d528      	bpl.n	8000820 <__sflush_r+0xb8>
 80007ce:	2200      	movs	r2, #0
 80007d0:	6062      	str	r2, [r4, #4]
 80007d2:	04d9      	lsls	r1, r3, #19
 80007d4:	6922      	ldr	r2, [r4, #16]
 80007d6:	6022      	str	r2, [r4, #0]
 80007d8:	d504      	bpl.n	80007e4 <__sflush_r+0x7c>
 80007da:	1c42      	adds	r2, r0, #1
 80007dc:	d101      	bne.n	80007e2 <__sflush_r+0x7a>
 80007de:	682b      	ldr	r3, [r5, #0]
 80007e0:	b903      	cbnz	r3, 80007e4 <__sflush_r+0x7c>
 80007e2:	6560      	str	r0, [r4, #84]	; 0x54
 80007e4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80007e6:	602f      	str	r7, [r5, #0]
 80007e8:	2900      	cmp	r1, #0
 80007ea:	d0ca      	beq.n	8000782 <__sflush_r+0x1a>
 80007ec:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80007f0:	4299      	cmp	r1, r3
 80007f2:	d002      	beq.n	80007fa <__sflush_r+0x92>
 80007f4:	4628      	mov	r0, r5
 80007f6:	f000 f9d7 	bl	8000ba8 <_free_r>
 80007fa:	2000      	movs	r0, #0
 80007fc:	6360      	str	r0, [r4, #52]	; 0x34
 80007fe:	e7c1      	b.n	8000784 <__sflush_r+0x1c>
 8000800:	6a21      	ldr	r1, [r4, #32]
 8000802:	2301      	movs	r3, #1
 8000804:	4628      	mov	r0, r5
 8000806:	47b0      	blx	r6
 8000808:	1c41      	adds	r1, r0, #1
 800080a:	d1c7      	bne.n	800079c <__sflush_r+0x34>
 800080c:	682b      	ldr	r3, [r5, #0]
 800080e:	2b00      	cmp	r3, #0
 8000810:	d0c4      	beq.n	800079c <__sflush_r+0x34>
 8000812:	2b1d      	cmp	r3, #29
 8000814:	d001      	beq.n	800081a <__sflush_r+0xb2>
 8000816:	2b16      	cmp	r3, #22
 8000818:	d101      	bne.n	800081e <__sflush_r+0xb6>
 800081a:	602f      	str	r7, [r5, #0]
 800081c:	e7b1      	b.n	8000782 <__sflush_r+0x1a>
 800081e:	89a3      	ldrh	r3, [r4, #12]
 8000820:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000824:	81a3      	strh	r3, [r4, #12]
 8000826:	e7ad      	b.n	8000784 <__sflush_r+0x1c>
 8000828:	690f      	ldr	r7, [r1, #16]
 800082a:	2f00      	cmp	r7, #0
 800082c:	d0a9      	beq.n	8000782 <__sflush_r+0x1a>
 800082e:	0793      	lsls	r3, r2, #30
 8000830:	680e      	ldr	r6, [r1, #0]
 8000832:	bf08      	it	eq
 8000834:	694b      	ldreq	r3, [r1, #20]
 8000836:	600f      	str	r7, [r1, #0]
 8000838:	bf18      	it	ne
 800083a:	2300      	movne	r3, #0
 800083c:	eba6 0807 	sub.w	r8, r6, r7
 8000840:	608b      	str	r3, [r1, #8]
 8000842:	f1b8 0f00 	cmp.w	r8, #0
 8000846:	dd9c      	ble.n	8000782 <__sflush_r+0x1a>
 8000848:	6a21      	ldr	r1, [r4, #32]
 800084a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800084c:	4643      	mov	r3, r8
 800084e:	463a      	mov	r2, r7
 8000850:	4628      	mov	r0, r5
 8000852:	47b0      	blx	r6
 8000854:	2800      	cmp	r0, #0
 8000856:	dc06      	bgt.n	8000866 <__sflush_r+0xfe>
 8000858:	89a3      	ldrh	r3, [r4, #12]
 800085a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800085e:	81a3      	strh	r3, [r4, #12]
 8000860:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000864:	e78e      	b.n	8000784 <__sflush_r+0x1c>
 8000866:	4407      	add	r7, r0
 8000868:	eba8 0800 	sub.w	r8, r8, r0
 800086c:	e7e9      	b.n	8000842 <__sflush_r+0xda>
 800086e:	bf00      	nop
 8000870:	20400001 	.word	0x20400001

08000874 <_fflush_r>:
 8000874:	b538      	push	{r3, r4, r5, lr}
 8000876:	690b      	ldr	r3, [r1, #16]
 8000878:	4605      	mov	r5, r0
 800087a:	460c      	mov	r4, r1
 800087c:	b913      	cbnz	r3, 8000884 <_fflush_r+0x10>
 800087e:	2500      	movs	r5, #0
 8000880:	4628      	mov	r0, r5
 8000882:	bd38      	pop	{r3, r4, r5, pc}
 8000884:	b118      	cbz	r0, 800088e <_fflush_r+0x1a>
 8000886:	6983      	ldr	r3, [r0, #24]
 8000888:	b90b      	cbnz	r3, 800088e <_fflush_r+0x1a>
 800088a:	f000 f887 	bl	800099c <__sinit>
 800088e:	4b14      	ldr	r3, [pc, #80]	; (80008e0 <_fflush_r+0x6c>)
 8000890:	429c      	cmp	r4, r3
 8000892:	d11b      	bne.n	80008cc <_fflush_r+0x58>
 8000894:	686c      	ldr	r4, [r5, #4]
 8000896:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800089a:	2b00      	cmp	r3, #0
 800089c:	d0ef      	beq.n	800087e <_fflush_r+0xa>
 800089e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80008a0:	07d0      	lsls	r0, r2, #31
 80008a2:	d404      	bmi.n	80008ae <_fflush_r+0x3a>
 80008a4:	0599      	lsls	r1, r3, #22
 80008a6:	d402      	bmi.n	80008ae <_fflush_r+0x3a>
 80008a8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80008aa:	f000 f915 	bl	8000ad8 <__retarget_lock_acquire_recursive>
 80008ae:	4628      	mov	r0, r5
 80008b0:	4621      	mov	r1, r4
 80008b2:	f7ff ff59 	bl	8000768 <__sflush_r>
 80008b6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80008b8:	07da      	lsls	r2, r3, #31
 80008ba:	4605      	mov	r5, r0
 80008bc:	d4e0      	bmi.n	8000880 <_fflush_r+0xc>
 80008be:	89a3      	ldrh	r3, [r4, #12]
 80008c0:	059b      	lsls	r3, r3, #22
 80008c2:	d4dd      	bmi.n	8000880 <_fflush_r+0xc>
 80008c4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80008c6:	f000 f908 	bl	8000ada <__retarget_lock_release_recursive>
 80008ca:	e7d9      	b.n	8000880 <_fflush_r+0xc>
 80008cc:	4b05      	ldr	r3, [pc, #20]	; (80008e4 <_fflush_r+0x70>)
 80008ce:	429c      	cmp	r4, r3
 80008d0:	d101      	bne.n	80008d6 <_fflush_r+0x62>
 80008d2:	68ac      	ldr	r4, [r5, #8]
 80008d4:	e7df      	b.n	8000896 <_fflush_r+0x22>
 80008d6:	4b04      	ldr	r3, [pc, #16]	; (80008e8 <_fflush_r+0x74>)
 80008d8:	429c      	cmp	r4, r3
 80008da:	bf08      	it	eq
 80008dc:	68ec      	ldreq	r4, [r5, #12]
 80008de:	e7da      	b.n	8000896 <_fflush_r+0x22>
 80008e0:	08000f48 	.word	0x08000f48
 80008e4:	08000f68 	.word	0x08000f68
 80008e8:	08000f28 	.word	0x08000f28

080008ec <std>:
 80008ec:	2300      	movs	r3, #0
 80008ee:	b510      	push	{r4, lr}
 80008f0:	4604      	mov	r4, r0
 80008f2:	e9c0 3300 	strd	r3, r3, [r0]
 80008f6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80008fa:	6083      	str	r3, [r0, #8]
 80008fc:	8181      	strh	r1, [r0, #12]
 80008fe:	6643      	str	r3, [r0, #100]	; 0x64
 8000900:	81c2      	strh	r2, [r0, #14]
 8000902:	6183      	str	r3, [r0, #24]
 8000904:	4619      	mov	r1, r3
 8000906:	2208      	movs	r2, #8
 8000908:	305c      	adds	r0, #92	; 0x5c
 800090a:	f7ff fdef 	bl	80004ec <memset>
 800090e:	4b05      	ldr	r3, [pc, #20]	; (8000924 <std+0x38>)
 8000910:	6263      	str	r3, [r4, #36]	; 0x24
 8000912:	4b05      	ldr	r3, [pc, #20]	; (8000928 <std+0x3c>)
 8000914:	62a3      	str	r3, [r4, #40]	; 0x28
 8000916:	4b05      	ldr	r3, [pc, #20]	; (800092c <std+0x40>)
 8000918:	62e3      	str	r3, [r4, #44]	; 0x2c
 800091a:	4b05      	ldr	r3, [pc, #20]	; (8000930 <std+0x44>)
 800091c:	6224      	str	r4, [r4, #32]
 800091e:	6323      	str	r3, [r4, #48]	; 0x30
 8000920:	bd10      	pop	{r4, pc}
 8000922:	bf00      	nop
 8000924:	08000d89 	.word	0x08000d89
 8000928:	08000dab 	.word	0x08000dab
 800092c:	08000de3 	.word	0x08000de3
 8000930:	08000e07 	.word	0x08000e07

08000934 <_cleanup_r>:
 8000934:	4901      	ldr	r1, [pc, #4]	; (800093c <_cleanup_r+0x8>)
 8000936:	f000 b8af 	b.w	8000a98 <_fwalk_reent>
 800093a:	bf00      	nop
 800093c:	08000875 	.word	0x08000875

08000940 <__sfmoreglue>:
 8000940:	b570      	push	{r4, r5, r6, lr}
 8000942:	2268      	movs	r2, #104	; 0x68
 8000944:	1e4d      	subs	r5, r1, #1
 8000946:	4355      	muls	r5, r2
 8000948:	460e      	mov	r6, r1
 800094a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800094e:	f000 f997 	bl	8000c80 <_malloc_r>
 8000952:	4604      	mov	r4, r0
 8000954:	b140      	cbz	r0, 8000968 <__sfmoreglue+0x28>
 8000956:	2100      	movs	r1, #0
 8000958:	e9c0 1600 	strd	r1, r6, [r0]
 800095c:	300c      	adds	r0, #12
 800095e:	60a0      	str	r0, [r4, #8]
 8000960:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000964:	f7ff fdc2 	bl	80004ec <memset>
 8000968:	4620      	mov	r0, r4
 800096a:	bd70      	pop	{r4, r5, r6, pc}

0800096c <__sfp_lock_acquire>:
 800096c:	4801      	ldr	r0, [pc, #4]	; (8000974 <__sfp_lock_acquire+0x8>)
 800096e:	f000 b8b3 	b.w	8000ad8 <__retarget_lock_acquire_recursive>
 8000972:	bf00      	nop
 8000974:	200000a5 	.word	0x200000a5

08000978 <__sfp_lock_release>:
 8000978:	4801      	ldr	r0, [pc, #4]	; (8000980 <__sfp_lock_release+0x8>)
 800097a:	f000 b8ae 	b.w	8000ada <__retarget_lock_release_recursive>
 800097e:	bf00      	nop
 8000980:	200000a5 	.word	0x200000a5

08000984 <__sinit_lock_acquire>:
 8000984:	4801      	ldr	r0, [pc, #4]	; (800098c <__sinit_lock_acquire+0x8>)
 8000986:	f000 b8a7 	b.w	8000ad8 <__retarget_lock_acquire_recursive>
 800098a:	bf00      	nop
 800098c:	200000a6 	.word	0x200000a6

08000990 <__sinit_lock_release>:
 8000990:	4801      	ldr	r0, [pc, #4]	; (8000998 <__sinit_lock_release+0x8>)
 8000992:	f000 b8a2 	b.w	8000ada <__retarget_lock_release_recursive>
 8000996:	bf00      	nop
 8000998:	200000a6 	.word	0x200000a6

0800099c <__sinit>:
 800099c:	b510      	push	{r4, lr}
 800099e:	4604      	mov	r4, r0
 80009a0:	f7ff fff0 	bl	8000984 <__sinit_lock_acquire>
 80009a4:	69a3      	ldr	r3, [r4, #24]
 80009a6:	b11b      	cbz	r3, 80009b0 <__sinit+0x14>
 80009a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80009ac:	f7ff bff0 	b.w	8000990 <__sinit_lock_release>
 80009b0:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80009b4:	6523      	str	r3, [r4, #80]	; 0x50
 80009b6:	4b13      	ldr	r3, [pc, #76]	; (8000a04 <__sinit+0x68>)
 80009b8:	4a13      	ldr	r2, [pc, #76]	; (8000a08 <__sinit+0x6c>)
 80009ba:	681b      	ldr	r3, [r3, #0]
 80009bc:	62a2      	str	r2, [r4, #40]	; 0x28
 80009be:	42a3      	cmp	r3, r4
 80009c0:	bf04      	itt	eq
 80009c2:	2301      	moveq	r3, #1
 80009c4:	61a3      	streq	r3, [r4, #24]
 80009c6:	4620      	mov	r0, r4
 80009c8:	f000 f820 	bl	8000a0c <__sfp>
 80009cc:	6060      	str	r0, [r4, #4]
 80009ce:	4620      	mov	r0, r4
 80009d0:	f000 f81c 	bl	8000a0c <__sfp>
 80009d4:	60a0      	str	r0, [r4, #8]
 80009d6:	4620      	mov	r0, r4
 80009d8:	f000 f818 	bl	8000a0c <__sfp>
 80009dc:	2200      	movs	r2, #0
 80009de:	60e0      	str	r0, [r4, #12]
 80009e0:	2104      	movs	r1, #4
 80009e2:	6860      	ldr	r0, [r4, #4]
 80009e4:	f7ff ff82 	bl	80008ec <std>
 80009e8:	68a0      	ldr	r0, [r4, #8]
 80009ea:	2201      	movs	r2, #1
 80009ec:	2109      	movs	r1, #9
 80009ee:	f7ff ff7d 	bl	80008ec <std>
 80009f2:	68e0      	ldr	r0, [r4, #12]
 80009f4:	2202      	movs	r2, #2
 80009f6:	2112      	movs	r1, #18
 80009f8:	f7ff ff78 	bl	80008ec <std>
 80009fc:	2301      	movs	r3, #1
 80009fe:	61a3      	str	r3, [r4, #24]
 8000a00:	e7d2      	b.n	80009a8 <__sinit+0xc>
 8000a02:	bf00      	nop
 8000a04:	08000f24 	.word	0x08000f24
 8000a08:	08000935 	.word	0x08000935

08000a0c <__sfp>:
 8000a0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a0e:	4607      	mov	r7, r0
 8000a10:	f7ff ffac 	bl	800096c <__sfp_lock_acquire>
 8000a14:	4b1e      	ldr	r3, [pc, #120]	; (8000a90 <__sfp+0x84>)
 8000a16:	681e      	ldr	r6, [r3, #0]
 8000a18:	69b3      	ldr	r3, [r6, #24]
 8000a1a:	b913      	cbnz	r3, 8000a22 <__sfp+0x16>
 8000a1c:	4630      	mov	r0, r6
 8000a1e:	f7ff ffbd 	bl	800099c <__sinit>
 8000a22:	3648      	adds	r6, #72	; 0x48
 8000a24:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000a28:	3b01      	subs	r3, #1
 8000a2a:	d503      	bpl.n	8000a34 <__sfp+0x28>
 8000a2c:	6833      	ldr	r3, [r6, #0]
 8000a2e:	b30b      	cbz	r3, 8000a74 <__sfp+0x68>
 8000a30:	6836      	ldr	r6, [r6, #0]
 8000a32:	e7f7      	b.n	8000a24 <__sfp+0x18>
 8000a34:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000a38:	b9d5      	cbnz	r5, 8000a70 <__sfp+0x64>
 8000a3a:	4b16      	ldr	r3, [pc, #88]	; (8000a94 <__sfp+0x88>)
 8000a3c:	60e3      	str	r3, [r4, #12]
 8000a3e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000a42:	6665      	str	r5, [r4, #100]	; 0x64
 8000a44:	f000 f847 	bl	8000ad6 <__retarget_lock_init_recursive>
 8000a48:	f7ff ff96 	bl	8000978 <__sfp_lock_release>
 8000a4c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000a50:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000a54:	6025      	str	r5, [r4, #0]
 8000a56:	61a5      	str	r5, [r4, #24]
 8000a58:	2208      	movs	r2, #8
 8000a5a:	4629      	mov	r1, r5
 8000a5c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000a60:	f7ff fd44 	bl	80004ec <memset>
 8000a64:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000a68:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000a6c:	4620      	mov	r0, r4
 8000a6e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000a70:	3468      	adds	r4, #104	; 0x68
 8000a72:	e7d9      	b.n	8000a28 <__sfp+0x1c>
 8000a74:	2104      	movs	r1, #4
 8000a76:	4638      	mov	r0, r7
 8000a78:	f7ff ff62 	bl	8000940 <__sfmoreglue>
 8000a7c:	4604      	mov	r4, r0
 8000a7e:	6030      	str	r0, [r6, #0]
 8000a80:	2800      	cmp	r0, #0
 8000a82:	d1d5      	bne.n	8000a30 <__sfp+0x24>
 8000a84:	f7ff ff78 	bl	8000978 <__sfp_lock_release>
 8000a88:	230c      	movs	r3, #12
 8000a8a:	603b      	str	r3, [r7, #0]
 8000a8c:	e7ee      	b.n	8000a6c <__sfp+0x60>
 8000a8e:	bf00      	nop
 8000a90:	08000f24 	.word	0x08000f24
 8000a94:	ffff0001 	.word	0xffff0001

08000a98 <_fwalk_reent>:
 8000a98:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000a9c:	4606      	mov	r6, r0
 8000a9e:	4688      	mov	r8, r1
 8000aa0:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000aa4:	2700      	movs	r7, #0
 8000aa6:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000aaa:	f1b9 0901 	subs.w	r9, r9, #1
 8000aae:	d505      	bpl.n	8000abc <_fwalk_reent+0x24>
 8000ab0:	6824      	ldr	r4, [r4, #0]
 8000ab2:	2c00      	cmp	r4, #0
 8000ab4:	d1f7      	bne.n	8000aa6 <_fwalk_reent+0xe>
 8000ab6:	4638      	mov	r0, r7
 8000ab8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000abc:	89ab      	ldrh	r3, [r5, #12]
 8000abe:	2b01      	cmp	r3, #1
 8000ac0:	d907      	bls.n	8000ad2 <_fwalk_reent+0x3a>
 8000ac2:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000ac6:	3301      	adds	r3, #1
 8000ac8:	d003      	beq.n	8000ad2 <_fwalk_reent+0x3a>
 8000aca:	4629      	mov	r1, r5
 8000acc:	4630      	mov	r0, r6
 8000ace:	47c0      	blx	r8
 8000ad0:	4307      	orrs	r7, r0
 8000ad2:	3568      	adds	r5, #104	; 0x68
 8000ad4:	e7e9      	b.n	8000aaa <_fwalk_reent+0x12>

08000ad6 <__retarget_lock_init_recursive>:
 8000ad6:	4770      	bx	lr

08000ad8 <__retarget_lock_acquire_recursive>:
 8000ad8:	4770      	bx	lr

08000ada <__retarget_lock_release_recursive>:
 8000ada:	4770      	bx	lr

08000adc <__swhatbuf_r>:
 8000adc:	b570      	push	{r4, r5, r6, lr}
 8000ade:	460e      	mov	r6, r1
 8000ae0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000ae4:	2900      	cmp	r1, #0
 8000ae6:	b096      	sub	sp, #88	; 0x58
 8000ae8:	4614      	mov	r4, r2
 8000aea:	461d      	mov	r5, r3
 8000aec:	da08      	bge.n	8000b00 <__swhatbuf_r+0x24>
 8000aee:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8000af2:	2200      	movs	r2, #0
 8000af4:	602a      	str	r2, [r5, #0]
 8000af6:	061a      	lsls	r2, r3, #24
 8000af8:	d410      	bmi.n	8000b1c <__swhatbuf_r+0x40>
 8000afa:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000afe:	e00e      	b.n	8000b1e <__swhatbuf_r+0x42>
 8000b00:	466a      	mov	r2, sp
 8000b02:	f000 f9a7 	bl	8000e54 <_fstat_r>
 8000b06:	2800      	cmp	r0, #0
 8000b08:	dbf1      	blt.n	8000aee <__swhatbuf_r+0x12>
 8000b0a:	9a01      	ldr	r2, [sp, #4]
 8000b0c:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000b10:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000b14:	425a      	negs	r2, r3
 8000b16:	415a      	adcs	r2, r3
 8000b18:	602a      	str	r2, [r5, #0]
 8000b1a:	e7ee      	b.n	8000afa <__swhatbuf_r+0x1e>
 8000b1c:	2340      	movs	r3, #64	; 0x40
 8000b1e:	2000      	movs	r0, #0
 8000b20:	6023      	str	r3, [r4, #0]
 8000b22:	b016      	add	sp, #88	; 0x58
 8000b24:	bd70      	pop	{r4, r5, r6, pc}
	...

08000b28 <__smakebuf_r>:
 8000b28:	898b      	ldrh	r3, [r1, #12]
 8000b2a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000b2c:	079d      	lsls	r5, r3, #30
 8000b2e:	4606      	mov	r6, r0
 8000b30:	460c      	mov	r4, r1
 8000b32:	d507      	bpl.n	8000b44 <__smakebuf_r+0x1c>
 8000b34:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000b38:	6023      	str	r3, [r4, #0]
 8000b3a:	6123      	str	r3, [r4, #16]
 8000b3c:	2301      	movs	r3, #1
 8000b3e:	6163      	str	r3, [r4, #20]
 8000b40:	b002      	add	sp, #8
 8000b42:	bd70      	pop	{r4, r5, r6, pc}
 8000b44:	ab01      	add	r3, sp, #4
 8000b46:	466a      	mov	r2, sp
 8000b48:	f7ff ffc8 	bl	8000adc <__swhatbuf_r>
 8000b4c:	9900      	ldr	r1, [sp, #0]
 8000b4e:	4605      	mov	r5, r0
 8000b50:	4630      	mov	r0, r6
 8000b52:	f000 f895 	bl	8000c80 <_malloc_r>
 8000b56:	b948      	cbnz	r0, 8000b6c <__smakebuf_r+0x44>
 8000b58:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000b5c:	059a      	lsls	r2, r3, #22
 8000b5e:	d4ef      	bmi.n	8000b40 <__smakebuf_r+0x18>
 8000b60:	f023 0303 	bic.w	r3, r3, #3
 8000b64:	f043 0302 	orr.w	r3, r3, #2
 8000b68:	81a3      	strh	r3, [r4, #12]
 8000b6a:	e7e3      	b.n	8000b34 <__smakebuf_r+0xc>
 8000b6c:	4b0d      	ldr	r3, [pc, #52]	; (8000ba4 <__smakebuf_r+0x7c>)
 8000b6e:	62b3      	str	r3, [r6, #40]	; 0x28
 8000b70:	89a3      	ldrh	r3, [r4, #12]
 8000b72:	6020      	str	r0, [r4, #0]
 8000b74:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000b78:	81a3      	strh	r3, [r4, #12]
 8000b7a:	9b00      	ldr	r3, [sp, #0]
 8000b7c:	6163      	str	r3, [r4, #20]
 8000b7e:	9b01      	ldr	r3, [sp, #4]
 8000b80:	6120      	str	r0, [r4, #16]
 8000b82:	b15b      	cbz	r3, 8000b9c <__smakebuf_r+0x74>
 8000b84:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000b88:	4630      	mov	r0, r6
 8000b8a:	f000 f975 	bl	8000e78 <_isatty_r>
 8000b8e:	b128      	cbz	r0, 8000b9c <__smakebuf_r+0x74>
 8000b90:	89a3      	ldrh	r3, [r4, #12]
 8000b92:	f023 0303 	bic.w	r3, r3, #3
 8000b96:	f043 0301 	orr.w	r3, r3, #1
 8000b9a:	81a3      	strh	r3, [r4, #12]
 8000b9c:	89a0      	ldrh	r0, [r4, #12]
 8000b9e:	4305      	orrs	r5, r0
 8000ba0:	81a5      	strh	r5, [r4, #12]
 8000ba2:	e7cd      	b.n	8000b40 <__smakebuf_r+0x18>
 8000ba4:	08000935 	.word	0x08000935

08000ba8 <_free_r>:
 8000ba8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000baa:	2900      	cmp	r1, #0
 8000bac:	d044      	beq.n	8000c38 <_free_r+0x90>
 8000bae:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000bb2:	9001      	str	r0, [sp, #4]
 8000bb4:	2b00      	cmp	r3, #0
 8000bb6:	f1a1 0404 	sub.w	r4, r1, #4
 8000bba:	bfb8      	it	lt
 8000bbc:	18e4      	addlt	r4, r4, r3
 8000bbe:	f000 f97d 	bl	8000ebc <__malloc_lock>
 8000bc2:	4a1e      	ldr	r2, [pc, #120]	; (8000c3c <_free_r+0x94>)
 8000bc4:	9801      	ldr	r0, [sp, #4]
 8000bc6:	6813      	ldr	r3, [r2, #0]
 8000bc8:	b933      	cbnz	r3, 8000bd8 <_free_r+0x30>
 8000bca:	6063      	str	r3, [r4, #4]
 8000bcc:	6014      	str	r4, [r2, #0]
 8000bce:	b003      	add	sp, #12
 8000bd0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8000bd4:	f000 b978 	b.w	8000ec8 <__malloc_unlock>
 8000bd8:	42a3      	cmp	r3, r4
 8000bda:	d908      	bls.n	8000bee <_free_r+0x46>
 8000bdc:	6825      	ldr	r5, [r4, #0]
 8000bde:	1961      	adds	r1, r4, r5
 8000be0:	428b      	cmp	r3, r1
 8000be2:	bf01      	itttt	eq
 8000be4:	6819      	ldreq	r1, [r3, #0]
 8000be6:	685b      	ldreq	r3, [r3, #4]
 8000be8:	1949      	addeq	r1, r1, r5
 8000bea:	6021      	streq	r1, [r4, #0]
 8000bec:	e7ed      	b.n	8000bca <_free_r+0x22>
 8000bee:	461a      	mov	r2, r3
 8000bf0:	685b      	ldr	r3, [r3, #4]
 8000bf2:	b10b      	cbz	r3, 8000bf8 <_free_r+0x50>
 8000bf4:	42a3      	cmp	r3, r4
 8000bf6:	d9fa      	bls.n	8000bee <_free_r+0x46>
 8000bf8:	6811      	ldr	r1, [r2, #0]
 8000bfa:	1855      	adds	r5, r2, r1
 8000bfc:	42a5      	cmp	r5, r4
 8000bfe:	d10b      	bne.n	8000c18 <_free_r+0x70>
 8000c00:	6824      	ldr	r4, [r4, #0]
 8000c02:	4421      	add	r1, r4
 8000c04:	1854      	adds	r4, r2, r1
 8000c06:	42a3      	cmp	r3, r4
 8000c08:	6011      	str	r1, [r2, #0]
 8000c0a:	d1e0      	bne.n	8000bce <_free_r+0x26>
 8000c0c:	681c      	ldr	r4, [r3, #0]
 8000c0e:	685b      	ldr	r3, [r3, #4]
 8000c10:	6053      	str	r3, [r2, #4]
 8000c12:	4421      	add	r1, r4
 8000c14:	6011      	str	r1, [r2, #0]
 8000c16:	e7da      	b.n	8000bce <_free_r+0x26>
 8000c18:	d902      	bls.n	8000c20 <_free_r+0x78>
 8000c1a:	230c      	movs	r3, #12
 8000c1c:	6003      	str	r3, [r0, #0]
 8000c1e:	e7d6      	b.n	8000bce <_free_r+0x26>
 8000c20:	6825      	ldr	r5, [r4, #0]
 8000c22:	1961      	adds	r1, r4, r5
 8000c24:	428b      	cmp	r3, r1
 8000c26:	bf04      	itt	eq
 8000c28:	6819      	ldreq	r1, [r3, #0]
 8000c2a:	685b      	ldreq	r3, [r3, #4]
 8000c2c:	6063      	str	r3, [r4, #4]
 8000c2e:	bf04      	itt	eq
 8000c30:	1949      	addeq	r1, r1, r5
 8000c32:	6021      	streq	r1, [r4, #0]
 8000c34:	6054      	str	r4, [r2, #4]
 8000c36:	e7ca      	b.n	8000bce <_free_r+0x26>
 8000c38:	b003      	add	sp, #12
 8000c3a:	bd30      	pop	{r4, r5, pc}
 8000c3c:	200000a8 	.word	0x200000a8

08000c40 <sbrk_aligned>:
 8000c40:	b570      	push	{r4, r5, r6, lr}
 8000c42:	4e0e      	ldr	r6, [pc, #56]	; (8000c7c <sbrk_aligned+0x3c>)
 8000c44:	460c      	mov	r4, r1
 8000c46:	6831      	ldr	r1, [r6, #0]
 8000c48:	4605      	mov	r5, r0
 8000c4a:	b911      	cbnz	r1, 8000c52 <sbrk_aligned+0x12>
 8000c4c:	f000 f88c 	bl	8000d68 <_sbrk_r>
 8000c50:	6030      	str	r0, [r6, #0]
 8000c52:	4621      	mov	r1, r4
 8000c54:	4628      	mov	r0, r5
 8000c56:	f000 f887 	bl	8000d68 <_sbrk_r>
 8000c5a:	1c43      	adds	r3, r0, #1
 8000c5c:	d00a      	beq.n	8000c74 <sbrk_aligned+0x34>
 8000c5e:	1cc4      	adds	r4, r0, #3
 8000c60:	f024 0403 	bic.w	r4, r4, #3
 8000c64:	42a0      	cmp	r0, r4
 8000c66:	d007      	beq.n	8000c78 <sbrk_aligned+0x38>
 8000c68:	1a21      	subs	r1, r4, r0
 8000c6a:	4628      	mov	r0, r5
 8000c6c:	f000 f87c 	bl	8000d68 <_sbrk_r>
 8000c70:	3001      	adds	r0, #1
 8000c72:	d101      	bne.n	8000c78 <sbrk_aligned+0x38>
 8000c74:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8000c78:	4620      	mov	r0, r4
 8000c7a:	bd70      	pop	{r4, r5, r6, pc}
 8000c7c:	200000ac 	.word	0x200000ac

08000c80 <_malloc_r>:
 8000c80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000c84:	1ccd      	adds	r5, r1, #3
 8000c86:	f025 0503 	bic.w	r5, r5, #3
 8000c8a:	3508      	adds	r5, #8
 8000c8c:	2d0c      	cmp	r5, #12
 8000c8e:	bf38      	it	cc
 8000c90:	250c      	movcc	r5, #12
 8000c92:	2d00      	cmp	r5, #0
 8000c94:	4607      	mov	r7, r0
 8000c96:	db01      	blt.n	8000c9c <_malloc_r+0x1c>
 8000c98:	42a9      	cmp	r1, r5
 8000c9a:	d905      	bls.n	8000ca8 <_malloc_r+0x28>
 8000c9c:	230c      	movs	r3, #12
 8000c9e:	603b      	str	r3, [r7, #0]
 8000ca0:	2600      	movs	r6, #0
 8000ca2:	4630      	mov	r0, r6
 8000ca4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000ca8:	4e2e      	ldr	r6, [pc, #184]	; (8000d64 <_malloc_r+0xe4>)
 8000caa:	f000 f907 	bl	8000ebc <__malloc_lock>
 8000cae:	6833      	ldr	r3, [r6, #0]
 8000cb0:	461c      	mov	r4, r3
 8000cb2:	bb34      	cbnz	r4, 8000d02 <_malloc_r+0x82>
 8000cb4:	4629      	mov	r1, r5
 8000cb6:	4638      	mov	r0, r7
 8000cb8:	f7ff ffc2 	bl	8000c40 <sbrk_aligned>
 8000cbc:	1c43      	adds	r3, r0, #1
 8000cbe:	4604      	mov	r4, r0
 8000cc0:	d14d      	bne.n	8000d5e <_malloc_r+0xde>
 8000cc2:	6834      	ldr	r4, [r6, #0]
 8000cc4:	4626      	mov	r6, r4
 8000cc6:	2e00      	cmp	r6, #0
 8000cc8:	d140      	bne.n	8000d4c <_malloc_r+0xcc>
 8000cca:	6823      	ldr	r3, [r4, #0]
 8000ccc:	4631      	mov	r1, r6
 8000cce:	4638      	mov	r0, r7
 8000cd0:	eb04 0803 	add.w	r8, r4, r3
 8000cd4:	f000 f848 	bl	8000d68 <_sbrk_r>
 8000cd8:	4580      	cmp	r8, r0
 8000cda:	d13a      	bne.n	8000d52 <_malloc_r+0xd2>
 8000cdc:	6821      	ldr	r1, [r4, #0]
 8000cde:	3503      	adds	r5, #3
 8000ce0:	1a6d      	subs	r5, r5, r1
 8000ce2:	f025 0503 	bic.w	r5, r5, #3
 8000ce6:	3508      	adds	r5, #8
 8000ce8:	2d0c      	cmp	r5, #12
 8000cea:	bf38      	it	cc
 8000cec:	250c      	movcc	r5, #12
 8000cee:	4629      	mov	r1, r5
 8000cf0:	4638      	mov	r0, r7
 8000cf2:	f7ff ffa5 	bl	8000c40 <sbrk_aligned>
 8000cf6:	3001      	adds	r0, #1
 8000cf8:	d02b      	beq.n	8000d52 <_malloc_r+0xd2>
 8000cfa:	6823      	ldr	r3, [r4, #0]
 8000cfc:	442b      	add	r3, r5
 8000cfe:	6023      	str	r3, [r4, #0]
 8000d00:	e00e      	b.n	8000d20 <_malloc_r+0xa0>
 8000d02:	6822      	ldr	r2, [r4, #0]
 8000d04:	1b52      	subs	r2, r2, r5
 8000d06:	d41e      	bmi.n	8000d46 <_malloc_r+0xc6>
 8000d08:	2a0b      	cmp	r2, #11
 8000d0a:	d916      	bls.n	8000d3a <_malloc_r+0xba>
 8000d0c:	1961      	adds	r1, r4, r5
 8000d0e:	42a3      	cmp	r3, r4
 8000d10:	6025      	str	r5, [r4, #0]
 8000d12:	bf18      	it	ne
 8000d14:	6059      	strne	r1, [r3, #4]
 8000d16:	6863      	ldr	r3, [r4, #4]
 8000d18:	bf08      	it	eq
 8000d1a:	6031      	streq	r1, [r6, #0]
 8000d1c:	5162      	str	r2, [r4, r5]
 8000d1e:	604b      	str	r3, [r1, #4]
 8000d20:	4638      	mov	r0, r7
 8000d22:	f104 060b 	add.w	r6, r4, #11
 8000d26:	f000 f8cf 	bl	8000ec8 <__malloc_unlock>
 8000d2a:	f026 0607 	bic.w	r6, r6, #7
 8000d2e:	1d23      	adds	r3, r4, #4
 8000d30:	1af2      	subs	r2, r6, r3
 8000d32:	d0b6      	beq.n	8000ca2 <_malloc_r+0x22>
 8000d34:	1b9b      	subs	r3, r3, r6
 8000d36:	50a3      	str	r3, [r4, r2]
 8000d38:	e7b3      	b.n	8000ca2 <_malloc_r+0x22>
 8000d3a:	6862      	ldr	r2, [r4, #4]
 8000d3c:	42a3      	cmp	r3, r4
 8000d3e:	bf0c      	ite	eq
 8000d40:	6032      	streq	r2, [r6, #0]
 8000d42:	605a      	strne	r2, [r3, #4]
 8000d44:	e7ec      	b.n	8000d20 <_malloc_r+0xa0>
 8000d46:	4623      	mov	r3, r4
 8000d48:	6864      	ldr	r4, [r4, #4]
 8000d4a:	e7b2      	b.n	8000cb2 <_malloc_r+0x32>
 8000d4c:	4634      	mov	r4, r6
 8000d4e:	6876      	ldr	r6, [r6, #4]
 8000d50:	e7b9      	b.n	8000cc6 <_malloc_r+0x46>
 8000d52:	230c      	movs	r3, #12
 8000d54:	603b      	str	r3, [r7, #0]
 8000d56:	4638      	mov	r0, r7
 8000d58:	f000 f8b6 	bl	8000ec8 <__malloc_unlock>
 8000d5c:	e7a1      	b.n	8000ca2 <_malloc_r+0x22>
 8000d5e:	6025      	str	r5, [r4, #0]
 8000d60:	e7de      	b.n	8000d20 <_malloc_r+0xa0>
 8000d62:	bf00      	nop
 8000d64:	200000a8 	.word	0x200000a8

08000d68 <_sbrk_r>:
 8000d68:	b538      	push	{r3, r4, r5, lr}
 8000d6a:	4d06      	ldr	r5, [pc, #24]	; (8000d84 <_sbrk_r+0x1c>)
 8000d6c:	2300      	movs	r3, #0
 8000d6e:	4604      	mov	r4, r0
 8000d70:	4608      	mov	r0, r1
 8000d72:	602b      	str	r3, [r5, #0]
 8000d74:	f7ff fb30 	bl	80003d8 <_sbrk>
 8000d78:	1c43      	adds	r3, r0, #1
 8000d7a:	d102      	bne.n	8000d82 <_sbrk_r+0x1a>
 8000d7c:	682b      	ldr	r3, [r5, #0]
 8000d7e:	b103      	cbz	r3, 8000d82 <_sbrk_r+0x1a>
 8000d80:	6023      	str	r3, [r4, #0]
 8000d82:	bd38      	pop	{r3, r4, r5, pc}
 8000d84:	200000b0 	.word	0x200000b0

08000d88 <__sread>:
 8000d88:	b510      	push	{r4, lr}
 8000d8a:	460c      	mov	r4, r1
 8000d8c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000d90:	f000 f8a0 	bl	8000ed4 <_read_r>
 8000d94:	2800      	cmp	r0, #0
 8000d96:	bfab      	itete	ge
 8000d98:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000d9a:	89a3      	ldrhlt	r3, [r4, #12]
 8000d9c:	181b      	addge	r3, r3, r0
 8000d9e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000da2:	bfac      	ite	ge
 8000da4:	6563      	strge	r3, [r4, #84]	; 0x54
 8000da6:	81a3      	strhlt	r3, [r4, #12]
 8000da8:	bd10      	pop	{r4, pc}

08000daa <__swrite>:
 8000daa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000dae:	461f      	mov	r7, r3
 8000db0:	898b      	ldrh	r3, [r1, #12]
 8000db2:	05db      	lsls	r3, r3, #23
 8000db4:	4605      	mov	r5, r0
 8000db6:	460c      	mov	r4, r1
 8000db8:	4616      	mov	r6, r2
 8000dba:	d505      	bpl.n	8000dc8 <__swrite+0x1e>
 8000dbc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000dc0:	2302      	movs	r3, #2
 8000dc2:	2200      	movs	r2, #0
 8000dc4:	f000 f868 	bl	8000e98 <_lseek_r>
 8000dc8:	89a3      	ldrh	r3, [r4, #12]
 8000dca:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000dce:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000dd2:	81a3      	strh	r3, [r4, #12]
 8000dd4:	4632      	mov	r2, r6
 8000dd6:	463b      	mov	r3, r7
 8000dd8:	4628      	mov	r0, r5
 8000dda:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000dde:	f000 b817 	b.w	8000e10 <_write_r>

08000de2 <__sseek>:
 8000de2:	b510      	push	{r4, lr}
 8000de4:	460c      	mov	r4, r1
 8000de6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000dea:	f000 f855 	bl	8000e98 <_lseek_r>
 8000dee:	1c43      	adds	r3, r0, #1
 8000df0:	89a3      	ldrh	r3, [r4, #12]
 8000df2:	bf15      	itete	ne
 8000df4:	6560      	strne	r0, [r4, #84]	; 0x54
 8000df6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000dfa:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000dfe:	81a3      	strheq	r3, [r4, #12]
 8000e00:	bf18      	it	ne
 8000e02:	81a3      	strhne	r3, [r4, #12]
 8000e04:	bd10      	pop	{r4, pc}

08000e06 <__sclose>:
 8000e06:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e0a:	f000 b813 	b.w	8000e34 <_close_r>
	...

08000e10 <_write_r>:
 8000e10:	b538      	push	{r3, r4, r5, lr}
 8000e12:	4d07      	ldr	r5, [pc, #28]	; (8000e30 <_write_r+0x20>)
 8000e14:	4604      	mov	r4, r0
 8000e16:	4608      	mov	r0, r1
 8000e18:	4611      	mov	r1, r2
 8000e1a:	2200      	movs	r2, #0
 8000e1c:	602a      	str	r2, [r5, #0]
 8000e1e:	461a      	mov	r2, r3
 8000e20:	f7ff fa89 	bl	8000336 <_write>
 8000e24:	1c43      	adds	r3, r0, #1
 8000e26:	d102      	bne.n	8000e2e <_write_r+0x1e>
 8000e28:	682b      	ldr	r3, [r5, #0]
 8000e2a:	b103      	cbz	r3, 8000e2e <_write_r+0x1e>
 8000e2c:	6023      	str	r3, [r4, #0]
 8000e2e:	bd38      	pop	{r3, r4, r5, pc}
 8000e30:	200000b0 	.word	0x200000b0

08000e34 <_close_r>:
 8000e34:	b538      	push	{r3, r4, r5, lr}
 8000e36:	4d06      	ldr	r5, [pc, #24]	; (8000e50 <_close_r+0x1c>)
 8000e38:	2300      	movs	r3, #0
 8000e3a:	4604      	mov	r4, r0
 8000e3c:	4608      	mov	r0, r1
 8000e3e:	602b      	str	r3, [r5, #0]
 8000e40:	f7ff fa95 	bl	800036e <_close>
 8000e44:	1c43      	adds	r3, r0, #1
 8000e46:	d102      	bne.n	8000e4e <_close_r+0x1a>
 8000e48:	682b      	ldr	r3, [r5, #0]
 8000e4a:	b103      	cbz	r3, 8000e4e <_close_r+0x1a>
 8000e4c:	6023      	str	r3, [r4, #0]
 8000e4e:	bd38      	pop	{r3, r4, r5, pc}
 8000e50:	200000b0 	.word	0x200000b0

08000e54 <_fstat_r>:
 8000e54:	b538      	push	{r3, r4, r5, lr}
 8000e56:	4d07      	ldr	r5, [pc, #28]	; (8000e74 <_fstat_r+0x20>)
 8000e58:	2300      	movs	r3, #0
 8000e5a:	4604      	mov	r4, r0
 8000e5c:	4608      	mov	r0, r1
 8000e5e:	4611      	mov	r1, r2
 8000e60:	602b      	str	r3, [r5, #0]
 8000e62:	f7ff fa90 	bl	8000386 <_fstat>
 8000e66:	1c43      	adds	r3, r0, #1
 8000e68:	d102      	bne.n	8000e70 <_fstat_r+0x1c>
 8000e6a:	682b      	ldr	r3, [r5, #0]
 8000e6c:	b103      	cbz	r3, 8000e70 <_fstat_r+0x1c>
 8000e6e:	6023      	str	r3, [r4, #0]
 8000e70:	bd38      	pop	{r3, r4, r5, pc}
 8000e72:	bf00      	nop
 8000e74:	200000b0 	.word	0x200000b0

08000e78 <_isatty_r>:
 8000e78:	b538      	push	{r3, r4, r5, lr}
 8000e7a:	4d06      	ldr	r5, [pc, #24]	; (8000e94 <_isatty_r+0x1c>)
 8000e7c:	2300      	movs	r3, #0
 8000e7e:	4604      	mov	r4, r0
 8000e80:	4608      	mov	r0, r1
 8000e82:	602b      	str	r3, [r5, #0]
 8000e84:	f7ff fa8f 	bl	80003a6 <_isatty>
 8000e88:	1c43      	adds	r3, r0, #1
 8000e8a:	d102      	bne.n	8000e92 <_isatty_r+0x1a>
 8000e8c:	682b      	ldr	r3, [r5, #0]
 8000e8e:	b103      	cbz	r3, 8000e92 <_isatty_r+0x1a>
 8000e90:	6023      	str	r3, [r4, #0]
 8000e92:	bd38      	pop	{r3, r4, r5, pc}
 8000e94:	200000b0 	.word	0x200000b0

08000e98 <_lseek_r>:
 8000e98:	b538      	push	{r3, r4, r5, lr}
 8000e9a:	4d07      	ldr	r5, [pc, #28]	; (8000eb8 <_lseek_r+0x20>)
 8000e9c:	4604      	mov	r4, r0
 8000e9e:	4608      	mov	r0, r1
 8000ea0:	4611      	mov	r1, r2
 8000ea2:	2200      	movs	r2, #0
 8000ea4:	602a      	str	r2, [r5, #0]
 8000ea6:	461a      	mov	r2, r3
 8000ea8:	f7ff fa88 	bl	80003bc <_lseek>
 8000eac:	1c43      	adds	r3, r0, #1
 8000eae:	d102      	bne.n	8000eb6 <_lseek_r+0x1e>
 8000eb0:	682b      	ldr	r3, [r5, #0]
 8000eb2:	b103      	cbz	r3, 8000eb6 <_lseek_r+0x1e>
 8000eb4:	6023      	str	r3, [r4, #0]
 8000eb6:	bd38      	pop	{r3, r4, r5, pc}
 8000eb8:	200000b0 	.word	0x200000b0

08000ebc <__malloc_lock>:
 8000ebc:	4801      	ldr	r0, [pc, #4]	; (8000ec4 <__malloc_lock+0x8>)
 8000ebe:	f7ff be0b 	b.w	8000ad8 <__retarget_lock_acquire_recursive>
 8000ec2:	bf00      	nop
 8000ec4:	200000a4 	.word	0x200000a4

08000ec8 <__malloc_unlock>:
 8000ec8:	4801      	ldr	r0, [pc, #4]	; (8000ed0 <__malloc_unlock+0x8>)
 8000eca:	f7ff be06 	b.w	8000ada <__retarget_lock_release_recursive>
 8000ece:	bf00      	nop
 8000ed0:	200000a4 	.word	0x200000a4

08000ed4 <_read_r>:
 8000ed4:	b538      	push	{r3, r4, r5, lr}
 8000ed6:	4d07      	ldr	r5, [pc, #28]	; (8000ef4 <_read_r+0x20>)
 8000ed8:	4604      	mov	r4, r0
 8000eda:	4608      	mov	r0, r1
 8000edc:	4611      	mov	r1, r2
 8000ede:	2200      	movs	r2, #0
 8000ee0:	602a      	str	r2, [r5, #0]
 8000ee2:	461a      	mov	r2, r3
 8000ee4:	f7ff fa0a 	bl	80002fc <_read>
 8000ee8:	1c43      	adds	r3, r0, #1
 8000eea:	d102      	bne.n	8000ef2 <_read_r+0x1e>
 8000eec:	682b      	ldr	r3, [r5, #0]
 8000eee:	b103      	cbz	r3, 8000ef2 <_read_r+0x1e>
 8000ef0:	6023      	str	r3, [r4, #0]
 8000ef2:	bd38      	pop	{r3, r4, r5, pc}
 8000ef4:	200000b0 	.word	0x200000b0

08000ef8 <_init>:
 8000ef8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000efa:	bf00      	nop
 8000efc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000efe:	bc08      	pop	{r3}
 8000f00:	469e      	mov	lr, r3
 8000f02:	4770      	bx	lr

08000f04 <_fini>:
 8000f04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f06:	bf00      	nop
 8000f08:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000f0a:	bc08      	pop	{r3}
 8000f0c:	469e      	mov	lr, r3
 8000f0e:	4770      	bx	lr
